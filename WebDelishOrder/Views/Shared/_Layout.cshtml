<!DOCTYPE html>
<html lang="en">

<head>
	<title>DeslishOrder_Admin </title>
	<!-- HTML5 Shim and Respond.js IE9 support of HTML5 elements and media queries -->
	<!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
	<!--[if lt IE 9]>
	  <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
	  <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
	  <![endif]-->
	<!-- Meta -->
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0, minimal-ui">
	<meta http-equiv="X-UA-Compatible" content="IE=edge" />
	<meta name="description" content="CodedThemes">
	<meta name="keywords" content=" Admin , Responsive, Landing, Bootstrap, App, Template, Mobile, iOS, Android, apple, creative app">
	<meta name="author" content="CodedThemes">
	<!-- Favicon icon -->
	<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
	<link rel="icon" href="~/assets/images/favicon.ico" type="image/x-icon">
	<!-- Google font-->
	<link href="https://fonts.googleapis.com/css?family=Open+Sans:400,600" rel="stylesheet">
	<!-- Required Fremwork -->
	<link rel="stylesheet" type="text/css" href="~/assets/css/bootstrap/css/bootstrap.min.css">
	<!-- themify-icons line icon -->
	<link rel="stylesheet" type="text/css" href="~/assets/icon/themify-icons/themify-icons.css">
	<!-- ico font -->
	<link rel="stylesheet" type="text/css" href="~/assets/icon/icofont/css/icofont.css">
	<!-- Style.css -->
	<link rel="stylesheet" type="text/css" href="~/assets/css/style.css">
	<link rel="stylesheet" type="text/css" href="~/assets/css/jquery.mCustomScrollbar.css">
</head>


<body>
	@{
		ViewBag.Title = "Home Page";
	}

	<!-- Pre-loader start -->
	<div class="theme-loader">
		<div class="ball-scale">
			<div class='contain'>
				<div class="ring">
					<div class="frame"></div>
				</div>
				<div class="ring">
					<div class="frame"></div>
				</div>
				<div class="ring">

					<div class="frame"></div>
				</div>
				<div class="ring">
					<div class="frame"></div>
				</div>
				<div class="ring">
					<div class="frame"></div>
				</div>
				<div class="ring">
					<div class="frame"></div>
				</div>
				<div class="ring">
					<div class="frame"></div>
				</div>
				<div class="ring">
					<div class="frame"></div>
				</div>
				<div class="ring">
					<div class="frame"></div>
				</div>
				<div class="ring">
					<div class="frame"></div>
				</div>
			</div>
		</div>
	</div>
	<!-- Pre-loader end -->
	<div id="pcoded" class="pcoded">
		<div class="pcoded-overlay-box"></div>
		<div class="pcoded-container navbar-wrapper">

			<nav class="navbar header-navbar pcoded-header">
				<div class="navbar-wrapper">

					<div class="navbar-logo">
						<a class="mobile-menu" id="mobile-collapse" href="#!">
							<i class="ti-menu"></i>
						</a>

						<a href="index.html">

							<img class="img-fluid" src="~/assets/images/logo.png" alt="DeslishOrder Admin" />
						</a>
						<a class="mobile-options">
							<i class="ti-more"></i>
						</a>
					</div>

					<div class="navbar-container container-fluid">
						<ul class="nav-left">
							<li>
								<div class="sidebar_toggle"><a href="javascript:void(0)"><i class="ti-menu"></i></a></div>
							</li>

							<li>
								<a href="#!" onclick="javascript:toggleFullScreen()">
									<i class="ti-fullscreen"></i>
								</a>
							</li>
						</ul>
						<ul class="nav-right">
							<!-- Trong phần notification-bell li -->
							<li class="header-notification">
								<a href="#!" id="notificationBell">
									<i class="ti-bell"></i>
									<span id="newOrderBadge" class="badge bg-c-pink">0</span>
								</a>
								<ul class="show-notification" id="notificationDropdown">
									<li>
										<h6>Thông báo</h6>
										<label class="label label-danger">Mới</label>
									</li>
									<!-- Notifications will be inserted here by JavaScript -->
									<li class="text-center" id="emptyNotification">
										<p>Không có thông báo nào</p>
									</li>
									
								</ul>
							</li>
							<li>
								<button onclick="toggleSound()">Tắt/Bật âm thanh</button>
							</li>
							<li class="user-profile header-notification">
								<a href="#!">
									<img src="~/assets/images/avatar-4.jpg" class="img-radius" alt="User-Profile-Image">
									<span>Admin</span>
									<i class="ti-angle-down"></i>
								</a>
								<ul class="show-notification profile-notification">
									<li>
										<a asp-controller="Account" asp-action="Logout">
											<i class="ti-layout-sidebar-left"></i> Đăng xuất
										</a>
									</li>
								</ul>
							</li>
						</ul>
					</div>
				</div>
			</nav>
			<div class="pcoded-main-container">
				<div class="pcoded-wrapper">
					<nav class="pcoded-navbar">
						<div class="sidebar_toggle"><a href="#"><i class="icon-close icons"></i></a></div>
						<div class="pcoded-inner-navbar main-menu">
							<!-- Tổng quan -->
							<div class="pcoded-navigatio-lavel" data-i18n="nav.category.navigation">Tổng quan</div>
							<ul class="pcoded-item pcoded-left-item">
								<li class="@(ViewData["ActivePage"] as string == "Dashboard" ? "active" : "")">
									<a asp-controller="Home" asp-action="Index" >
										<!-- Sửa từ asp-page thành asp-controller và asp-action -->
										<span class="pcoded-micon"><i class="bi bi-speedometer2"></i></span>
										<span class="pcoded-mtext">Tổng quan</span>
									</a>
								</li>
							</ul>

							<!-- Quản lý danh mục -->
							<div class="pcoded-navigatio-lavel" data-i18n="nav.category.forms">Quản lý danh mục</div>
							<ul class="pcoded-item pcoded-left-item">
								<li class="@(ViewData["ActivePage"] as string == "Category" ? "active" : "")">
									<a asp-controller="Category" asp-action="Index" >
										<!-- Sửa từ asp-page thành asp-controller và asp-action -->
										<span class="pcoded-micon"><i class="bi bi-grid"></i></span>
										<span class="pcoded-mtext">Danh mục món ăn</span>
									</a>
								</li>
							</ul>

							<!-- Sản phẩm -->
							<div class="pcoded-navigatio-lavel" data-i18n="nav.category.forms">Sản phẩm</div>
							<ul class="pcoded-item pcoded-left-item">
								<li class="@(ViewData["ActivePage"] as string == "Product" ? "active" : "")">
									<a asp-controller="Product" asp-action="Index" >
										<!-- Sửa từ asp-page thành asp-controller và asp-action -->
										<span class="pcoded-micon"><i class="bi bi-box"></i></span>
										<span class="pcoded-mtext">Danh sách món ăn</span>
									</a>
								</li>
							</ul>

							<!-- Quản lý đơn hàng -->
							<div class="pcoded-navigatio-lavel" data-i18n="nav.category.other">Quản lý đơn hàng</div>
							<ul class="pcoded-item pcoded-left-item">
								<li class="@(ViewData["ActivePage"] as string == "UpdateStatus" ? "active" : "")">
									<a asp-controller="Order" asp-action="Index" >
										<!-- Sửa từ asp-page thành asp-controller và asp-action -->
										<span class="pcoded-micon"><i class="bi bi-truck"></i></span>
										<span class="pcoded-mtext">Cập nhật đơn hàng</span>
									</a>
								</li>
							</ul>

							<!--Đánh giá-->
							<div class="pcoded-navigatio-lavel" data-i18n="nav.category.other">Đánh giá</div>
							<ul class="pcoded-item pcoded-left-item">
								<li class="@(ViewData["ActivePage"] as string == "ReviewFood" ? "active" : "")">
									<a asp-controller="Review" asp-action="Index" >
										<!-- Sửa từ asp-page thành asp-controller và asp-action -->
										<span class="pcoded-micon"><i class="bi bi-bar-chart"></i></span>
										<span class="pcoded-mtext">Đánh giá món ăn</span>
									</a>
								</li>
							</ul>

							<!-- Báo cáo -->
							<div class="pcoded-navigatio-lavel" data-i18n="nav.category.other">Báo cáo</div>
							<ul class="pcoded-item pcoded-left-item">
								<li class="@(ViewData["ActivePage"] as string == "SellingReport" ? "active" : "")">
									<a asp-controller="Report" asp-action="Index">
										<!-- Sửa từ asp-page thành asp-controller và asp-action -->
										<span class="pcoded-micon"><i class="bi bi-bar-chart"></i></span>
										<span class="pcoded-mtext">Báo cáo doanh thu</span>
									</a>
								</li>
							</ul>

							
						</div>


					</nav>

					<div class="pcoded-content">
						<!-- Danger-color Breadcrumb card start -->
						<div class="card borderless-card">
							<div class="card-block danger-breadcrumb">
								<div class="page-header-breadcrumb">
									<ul class="breadcrumb-title">
										<li class="breadcrumb-item">
											<a asp-controller="Home" asp-action="Index">
												<i class="icofont icofont-home"></i>
											</a>
										</li>
										<li class="breadcrumb-item">
											<a href="#">@ViewData["PageTitle"]</a>
										</li>
									</ul>
								</div>
							</div>
						</div>
						<!-- Danger-color Breadcrumb card end -->
					</div>
					<!-- Danger-color Breadcrumb card end -->
					<div class="pcoded-content">
						<main role="main" class="pb-3">
							@RenderBody()
						</main>
					</div>

				</div>
			</div>
		</div>
	</div>


	<footer class="border-top footer text-muted">
		<div class="container">
			&copy; 2025 - WebDelishOrder - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
		</div>
	</footer>
	<!-- Required Jquery -->
	<script type="text/javascript" src="~/assets/js/jquery/jquery.min.js"></script>
	<script type="text/javascript" src="~/assets/js/jquery-ui/jquery-ui.min.js"></script>
	<script type="text/javascript" src="~/assets/js/popper.js/popper.min.js"></script>
	<script type="text/javascript" src="~/assets/js/bootstrap/js/bootstrap.min.js"></script>
	<!-- jquery slimscroll js -->
	<script type="text/javascript" src="~/assets/js/jquery-slimscroll/jquery.slimscroll.js"></script>
	<!-- modernizr js -->
	<script type="text/javascript" src="~/assets/js/modernizr/modernizr.js"></script>
	<!-- am chart -->
	<script src="~/assets/pages/widget/amchart/amcharts.min.js"></script>
	<script src="~/assets/pages/widget/amchart/serial.min.js"></script>
	<!-- Todo js -->
	<script type="text/javascript " src="~/assets/pages/todo/todo.js "></script>
	<!-- Custom js -->
	<script type="text/javascript" src="~/assets/pages/dashboard/custom-dashboard.js"></script>
	<script type="text/javascript" src="~/assets/js/script.js"></script>
	<script type="text/javascript " src="~/assets/js/SmoothScroll.js"></script>
	<script src="~/assets/js/pcoded.min.js"></script>
	<script src="~/assets/js/demo-12.js"></script>
	<script src="~/assets/js/jquery.mCustomScrollbar.concat.min.js"></script>
	<script>
		var $window = $(window);
		var nav = $('.fixed-button');
			$window.scroll(function(){
				if ($window.scrollTop() >= 200) {
				 nav.addClass('active');
			 }
			 else {
				 nav.removeClass('active');
			 }
		 });
	</script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.17/signalr.min.js"></script>
	<script>

				// Initialize SignalR connection
		const connection = new signalR.HubConnectionBuilder()
			.withUrl("/orderHub") // Ensure this matches your SignalR hub URL
			.build();

		// Array to store notifications
		let notifications = [];

		// Handle new order notifications
		connection.on("ReceiveNewOrder", function (orderId) {
			// Update badge
			const badge = document.getElementById("newOrderBadge");
			if (badge) {
				badge.textContent = parseInt(badge.textContent || "0") + 1;
				badge.style.display = "inline"; // Ensure badge is visible
			}

			// Show notification bell
			const notificationBell = document.getElementById("notificationBell");
			if (notificationBell) {
				notificationBell.classList.add("active");
			}

			// Play sound
			if (soundEnabled) {
				notificationSound.play().catch(err => console.error("Error playing sound:", err));
			}

			// Add notification to the list
			notifications.push({ orderId, message: `Đơn hàng mới: Mã đơn hàng ${orderId}` });
			updateNotificationDropdown();
		});

		// Update notification dropdown
		function updateNotificationDropdown() {
			const notificationDropdown = document.getElementById("notificationDropdown");
			if (!notificationDropdown) return;

			// Clear existing notifications
			notificationDropdown.innerHTML = "";

			if (notifications.length === 0) {
				// Show "No notifications" message if empty
				const emptyNotification = document.createElement("li");
				emptyNotification.id = "emptyNotification";
				emptyNotification.textContent = "Không có thông báo nào";
				notificationDropdown.appendChild(emptyNotification);
			} else {
				// Add notifications to the dropdown
				notifications.forEach((notification, index) => {
					const notificationItem = document.createElement("li");
					notificationItem.innerHTML = `
						<a href="#!">${notification.message}</a>
						<button class="mark-as-read" data-index="${index}">Đánh dấu đã đọc</button>
					`;
					notificationDropdown.appendChild(notificationItem);
				});
			}
		}

		// Handle "Mark as read" button click
		document.addEventListener("click", function (event) {
			if (event.target.classList.contains("mark-as-read")) {
				const index = event.target.getAttribute("data-index");
				if (index !== null) {
					notifications.splice(index, 1); // Remove notification from the list
					updateNotificationDropdown();

					// Update badge count
					const badge = document.getElementById("newOrderBadge");
					if (badge) {
						const newCount = Math.max(0, parseInt(badge.textContent || "0") - 1);
						badge.textContent = newCount;
						if (newCount === 0) {
							badge.style.display = "none"; // Hide badge if no notifications
						}
					}
				}
			}
		});

		// Handle order status change notifications
		connection.on("ReceiveOrderStatusChange", function (orderId, status) {
			alert(`Trạng thái đơn hàng ${orderId} đã thay đổi thành: ${status}`);
		});

		// Start SignalR connection
		connection.start()
			.then(() => console.log("SignalR connected successfully."))
			.catch(function (err) {
				console.error("Error starting SignalR connection:", err.toString());
			});

		// Auto-refresh page every 5 minutes
		setInterval(() => {
			location.reload();
		}, 300000); // 5 minutes

		// Ensure sound is initialized
		const soundEnabled = true;
		const notificationSound = new Audio("../assets/sounds/notification_sound.mp3");
		notificationSound.load();
	</script>
	
	<style>
		.toast-notification {
			position: fixed;
			bottom: 20px;
			right: 20px;
			background: #f8d7da;
			color: #721c24;
			padding: 10px 20px;
			border-radius: 5px;
			box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
			z-index: 1000;
		}

		#notificationBell.active {
			color: red;
		}
	</style>
	@await RenderSectionAsync("Scripts", required: false)
	
</body>
</html>
